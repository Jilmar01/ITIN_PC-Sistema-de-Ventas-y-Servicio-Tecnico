package itin_pc.view;

import itin_pc.controller.ClienteControlador;
import itin_pc.controller.EmpleadoControlador;
import itin_pc.controller.ProductoControlador;
import itin_pc.controller.UsuarioControlador;
import itin_pc.controller.VentaControlador;
import itin_pc.model.Categoria;
import itin_pc.model.Cliente;
import itin_pc.model.DetalleVenta;
import itin_pc.model.Empleado;
import itin_pc.model.FormasPago;
import itin_pc.model.Marca;
import itin_pc.model.Producto;
import itin_pc.model.TipoCliente;
import itin_pc.model.Usuario;
import itin_pc.model.Venta;
import itin_pc.util.Excepciones;
import itin_pc.util.SesionUsuario;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import jilmar.LabelRound;

public class GestionVentas extends javax.swing.JFrame {

    private DefaultTableModel modeloTabla;

    private final UsuarioControlador u;
    private final ProductoControlador p;
    private final ClienteControlador c;
    private final VentaControlador v;

    List<Producto> listaProductosDB;
    List<Producto> listaProductosFiltro;
    private List<DetalleVenta> listaDetalleVenta;

    Usuario usuario;
    Cliente clienteVenta;

    private int initX, initY;

    public GestionVentas() {

        this.u = new UsuarioControlador();
        this.p = new ProductoControlador();
        this.c = new ClienteControlador();
        this.v = new VentaControlador();

        usuario = SesionUsuario.obtenerUsuarioActual();

        listaProductosFiltro = new ArrayList<Producto>();
        listaDetalleVenta = new ArrayList<DetalleVenta>();

        initComponents();
        this.setLocationRelativeTo(null);
        propiedadTabla();

        verProductos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelActions = new javax.swing.JPanel();
        lblIcon = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JLabel();
        btnExit = new javax.swing.JLabel();
        panelMain = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        panelRound14 = new jilmar.PanelRound();
        lblRol = new jilmar.LabelRound();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnVolverMenu = new jilmar.LabelRound();
        lblUser = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        pnlListaEmpleados = new jilmar.PanelRound();
        lblAccesos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        pnlProducto = new jilmar.PanelRound();
        cmbProductos = new javax.swing.JComboBox<>();
        lblNombre = new jilmar.LabelRound();
        lblDescripcion = new jilmar.LabelRound();
        lblCategoria = new jilmar.LabelRound();
        lblMarca = new jilmar.LabelRound();
        lblPrecio = new jilmar.LabelRound();
        panelRound7 = new jilmar.PanelRound();
        txtCantidad = new javax.swing.JTextField();
        btnAgregarProducto = new jilmar.LabelRound();
        lblTotal = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        lblIva = new javax.swing.JLabel();
        btnRegistrarVenta = new jilmar.LabelRound();
        pnlRegistroEmpleado = new jilmar.PanelRound();
        lblResumen1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        bntRegistrarCliente = new jilmar.LabelRound();
        panelRound8 = new jilmar.PanelRound();
        txtBuscarNombre = new javax.swing.JTextField();
        btnBuscar1 = new jilmar.LabelRound();
        lblTipoCliente = new jilmar.LabelRound();
        lblNombreCliente = new jilmar.LabelRound();
        lblApellido = new jilmar.LabelRound();
        lblEmail = new jilmar.LabelRound();
        lblTelefono = new jilmar.LabelRound();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelActions.setBackground(new java.awt.Color(215, 235, 255));
        panelActions.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelActionsMouseDragged(evt);
            }
        });
        panelActions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelActionsMousePressed(evt);
            }
        });
        panelActions.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logo_icono.png"))); // NOI18N
        panelActions.add(lblIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 30));

        lblTitle.setBackground(new java.awt.Color(0, 51, 153));
        lblTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 153));
        lblTitle.setText("ITIN-PC Mundo Tecnologico");
        panelActions.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 0, -1, 30));

        btnMinimize.setBackground(new java.awt.Color(215, 235, 255));
        btnMinimize.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnMinimize.setForeground(new java.awt.Color(0, 51, 153));
        btnMinimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnMinimize.setText("-");
        btnMinimize.setOpaque(true);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseExited(evt);
            }
        });
        panelActions.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 0, 50, 30));

        btnExit.setBackground(new java.awt.Color(215, 235, 255));
        btnExit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(0, 51, 153));
        btnExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnExit.setText("X");
        btnExit.setOpaque(true);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        panelActions.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 0, 50, 30));

        getContentPane().add(panelActions, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 30));

        panelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound14.setBackground(new Color(255, 255, 255,80));
        panelRound14.setRoundBottomLeft(30);
        panelRound14.setRoundBottomRight(30);
        panelRound14.setRoundTopLeft(30);
        panelRound14.setRoundTopRight(30);
        panelRound14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRol.setBackground(new java.awt.Color(153, 255, 153));
        lblRol.setForeground(new java.awt.Color(0, 51, 153));
        lblRol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRol.setText("VENDEDOR");
        lblRol.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblRol.setRoundBottomLeft(30);
        lblRol.setRoundBottomRight(30);
        lblRol.setRoundTopLeft(30);
        lblRol.setRoundTopRight(30);
        panelRound14.add(lblRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 25, 90, 30));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logo_icon_50x50.png"))); // NOI18N
        panelRound14.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 15, 50, 50));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gestion de Ventas");
        panelRound14.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 15, -1, -1));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Proceso de Ordenes de Compra");
        panelRound14.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 45, -1, -1));

        btnVolverMenu.setBackground(new java.awt.Color(11, 61, 120));
        btnVolverMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnVolverMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnVolverMenu.setText("Volver al Menu");
        btnVolverMenu.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        btnVolverMenu.setRoundBottomLeft(50);
        btnVolverMenu.setRoundBottomRight(50);
        btnVolverMenu.setRoundTopLeft(50);
        btnVolverMenu.setRoundTopRight(50);
        btnVolverMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMenuMouseExited(evt);
            }
        });
        panelRound14.add(btnVolverMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 170, 40));

        lblUser.setFont(new java.awt.Font("JetBrains Mono NL ExtraBold", 0, 14)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 255, 255));
        lblUser.setText("Jilmar Gonzalez");
        panelRound14.add(lblUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, -1, -1));

        jLabel22.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Usuario:");
        panelRound14.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        jPanel1.add(panelRound14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 1140, 80));

        pnlListaEmpleados.setBackground(new Color(255, 255, 255, 230));
        pnlListaEmpleados.setRoundBottomLeft(30);
        pnlListaEmpleados.setRoundBottomRight(30);
        pnlListaEmpleados.setRoundTopLeft(30);
        pnlListaEmpleados.setRoundTopRight(30);
        pnlListaEmpleados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAccesos.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 20)); // NOI18N
        lblAccesos.setForeground(new java.awt.Color(0, 51, 153));
        lblAccesos.setText("Detalles de Venta");
        pnlListaEmpleados.add(lblAccesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Usuario", "Rol", "Fecha Ingreso", "Aciones"
            }
        ));
        tblProductos.setEnabled(false);
        tblProductos.setOpaque(false);
        jScrollPane1.setViewportView(tblProductos);
        if (tblProductos.getColumnModel().getColumnCount() > 0) {
            tblProductos.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        pnlListaEmpleados.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 690, 160));

        pnlProducto.setBackground(new java.awt.Color(255, 255, 255));
        pnlProducto.setRoundBottomLeft(15);
        pnlProducto.setRoundBottomRight(15);
        pnlProducto.setRoundTopLeft(15);
        pnlProducto.setRoundTopRight(15);
        pnlProducto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbProductos.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 14)); // NOI18N
        cmbProductos.setBorder(null);
        cmbProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbProductosMouseClicked(evt);
            }
        });
        cmbProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductosActionPerformed(evt);
            }
        });
        pnlProducto.add(cmbProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 290, 40));

        pnlListaEmpleados.add(pnlProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 300, 40));

        lblNombre.setBackground(new java.awt.Color(255, 255, 255));
        lblNombre.setForeground(new java.awt.Color(102, 102, 102));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombre.setText("Nombre Producto");
        lblNombre.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblNombre.setRoundBottomLeft(15);
        lblNombre.setRoundBottomRight(15);
        lblNombre.setRoundTopLeft(15);
        lblNombre.setRoundTopRight(15);
        pnlListaEmpleados.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 300, 30));

        lblDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setForeground(new java.awt.Color(102, 102, 102));
        lblDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDescripcion.setText("Descripcion Producto");
        lblDescripcion.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblDescripcion.setRoundBottomLeft(15);
        lblDescripcion.setRoundBottomRight(15);
        lblDescripcion.setRoundTopLeft(15);
        lblDescripcion.setRoundTopRight(15);
        pnlListaEmpleados.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 300, 30));

        lblCategoria.setBackground(new java.awt.Color(255, 255, 255));
        lblCategoria.setForeground(new java.awt.Color(102, 102, 102));
        lblCategoria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCategoria.setText("Categoria");
        lblCategoria.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblCategoria.setRoundBottomLeft(15);
        lblCategoria.setRoundBottomRight(15);
        lblCategoria.setRoundTopLeft(15);
        lblCategoria.setRoundTopRight(15);
        pnlListaEmpleados.add(lblCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 160, 30));

        lblMarca.setBackground(new java.awt.Color(255, 255, 255));
        lblMarca.setForeground(new java.awt.Color(102, 102, 102));
        lblMarca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMarca.setText("Marca");
        lblMarca.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblMarca.setRoundBottomLeft(15);
        lblMarca.setRoundBottomRight(15);
        lblMarca.setRoundTopLeft(15);
        lblMarca.setRoundTopRight(15);
        pnlListaEmpleados.add(lblMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 160, 30));

        lblPrecio.setBackground(new java.awt.Color(255, 255, 255));
        lblPrecio.setForeground(new java.awt.Color(102, 102, 102));
        lblPrecio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrecio.setText("Precio");
        lblPrecio.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblPrecio.setRoundBottomLeft(15);
        lblPrecio.setRoundBottomRight(15);
        lblPrecio.setRoundTopLeft(15);
        lblPrecio.setRoundTopRight(15);
        pnlListaEmpleados.add(lblPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, 160, 30));

        panelRound7.setBackground(new java.awt.Color(255, 255, 255));
        panelRound7.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        panelRound7.setRoundBottomLeft(15);
        panelRound7.setRoundBottomRight(15);
        panelRound7.setRoundTopLeft(15);
        panelRound7.setRoundTopRight(15);
        panelRound7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCantidad.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        txtCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCantidad.setText("Cantidad");
        txtCantidad.setBorder(null);
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        panelRound7.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 30));

        pnlListaEmpleados.add(panelRound7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, 160, 30));

        btnAgregarProducto.setBackground(new java.awt.Color(0, 204, 255));
        btnAgregarProducto.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAgregarProducto.setText("Agregar Producto");
        btnAgregarProducto.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        btnAgregarProducto.setRoundBottomLeft(40);
        btnAgregarProducto.setRoundBottomRight(40);
        btnAgregarProducto.setRoundTopLeft(40);
        btnAgregarProducto.setRoundTopRight(40);
        btnAgregarProducto.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
        btnAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarProductoMouseClicked(evt);
            }
        });
        btnAgregarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                // Al entrar el mouse, se aplica solo un color (puedes usar un gradiente de un solo color si tu botón lo permite)
                btnAgregarProducto.setGradientHorizontal(new Color(2, 114, 185), new Color(2, 114, 185));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                // Al salir el mouse, se vuelve al gradiente original
                btnAgregarProducto.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
            }
        });
        pnlListaEmpleados.add(btnAgregarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 230, 160, 40));

        lblTotal.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblTotal.setText("Total:");
        pnlListaEmpleados.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 150, -1));

        lblSubtotal.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblSubtotal.setText("SubTotal: ");
        pnlListaEmpleados.add(lblSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 150, -1));

        lblIva.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblIva.setText("Iva(15%):");
        pnlListaEmpleados.add(lblIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 150, -1));

        btnRegistrarVenta.setBackground(new java.awt.Color(0, 204, 255));
        btnRegistrarVenta.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistrarVenta.setText("Registrar Venta");
        btnRegistrarVenta.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        btnRegistrarVenta.setRoundBottomLeft(40);
        btnRegistrarVenta.setRoundBottomRight(40);
        btnRegistrarVenta.setRoundTopLeft(40);
        btnRegistrarVenta.setRoundTopRight(40);
        btnRegistrarVenta.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
        btnRegistrarVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarVentaMouseClicked(evt);
            }
        });
        btnRegistrarVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                // Al entrar el mouse, se aplica solo un color (puedes usar un gradiente de un solo color si tu botón lo permite)
                btnRegistrarVenta.setGradientHorizontal(new Color(2, 114, 185), new Color(2, 114, 185));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                // Al salir el mouse, se vuelve al gradiente original
                btnRegistrarVenta.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
            }
        });
        pnlListaEmpleados.add(btnRegistrarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 160, 40));

        jPanel1.add(pnlListaEmpleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 750, 530));

        pnlRegistroEmpleado.setBackground(new Color(255, 255, 255, 230));
        pnlRegistroEmpleado.setRoundBottomLeft(30);
        pnlRegistroEmpleado.setRoundBottomRight(30);
        pnlRegistroEmpleado.setRoundTopLeft(30);
        pnlRegistroEmpleado.setRoundTopRight(30);
        pnlRegistroEmpleado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblResumen1.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 20)); // NOI18N
        lblResumen1.setForeground(new java.awt.Color(0, 51, 153));
        lblResumen1.setText("Nueva Venta - Datos Cliente");
        pnlRegistroEmpleado.add(lblResumen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel8.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Apellido");
        pnlRegistroEmpleado.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 80, -1));

        jLabel21.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Nombre");
        pnlRegistroEmpleado.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 70, -1));

        jLabel23.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Correo electronico");
        pnlRegistroEmpleado.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 150, -1));

        jLabel9.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Tipo Cliente");
        pnlRegistroEmpleado.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 110, -1));

        jLabel10.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Telefono");
        pnlRegistroEmpleado.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 70, -1));

        bntRegistrarCliente.setBackground(new java.awt.Color(0, 204, 255));
        bntRegistrarCliente.setForeground(new java.awt.Color(255, 255, 255));
        bntRegistrarCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bntRegistrarCliente.setText("Crear Cliente");
        bntRegistrarCliente.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        bntRegistrarCliente.setRoundBottomLeft(40);
        bntRegistrarCliente.setRoundBottomRight(40);
        bntRegistrarCliente.setRoundTopLeft(40);
        bntRegistrarCliente.setRoundTopRight(40);
        bntRegistrarCliente.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
        bntRegistrarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntRegistrarClienteMouseClicked(evt);
            }
        });
        bntRegistrarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                // Al entrar el mouse, se aplica solo un color (puedes usar un gradiente de un solo color si tu botón lo permite)
                bntRegistrarCliente.setGradientHorizontal(new Color(4, 178, 234), new Color(4, 178, 234));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                // Al salir el mouse, se vuelve al gradiente original
                bntRegistrarCliente.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
            }
        });
        pnlRegistroEmpleado.add(bntRegistrarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 140, 40));

        panelRound8.setBackground(new java.awt.Color(255, 255, 255));
        panelRound8.setRoundBottomLeft(15);
        panelRound8.setRoundBottomRight(15);
        panelRound8.setRoundTopLeft(15);
        panelRound8.setRoundTopRight(15);
        panelRound8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBuscarNombre.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 14)); // NOI18N
        txtBuscarNombre.setForeground(new java.awt.Color(102, 102, 102));
        txtBuscarNombre.setText("Buscar por nombre...");
        txtBuscarNombre.setBorder(null);
        txtBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarNombreActionPerformed(evt);
            }
        });
        txtBuscarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarNombreKeyTyped(evt);
            }
        });
        txtBuscarNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (txtBuscarNombre.getText().equals("Buscar por nombre...")) {
                    txtBuscarNombre.setText("");
                    txtBuscarNombre.setForeground(Color.BLACK);
                }
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                if (txtBuscarNombre.getText().isEmpty()) {
                    txtBuscarNombre.setText("Buscar por nombre...");
                    txtBuscarNombre.setForeground(Color.GRAY);
                }
            }
        });
        panelRound8.add(txtBuscarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 40));

        pnlRegistroEmpleado.add(panelRound8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 190, 40));

        btnBuscar1.setBackground(new java.awt.Color(0, 204, 255));
        btnBuscar1.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscar1.setText("Buscar");
        btnBuscar1.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        btnBuscar1.setRoundBottomLeft(40);
        btnBuscar1.setRoundBottomRight(40);
        btnBuscar1.setRoundTopLeft(40);
        btnBuscar1.setRoundTopRight(40);
        bntRegistrarCliente.setGradientHorizontal(new Color(4, 178, 234), new Color(2, 114, 185));
        btnBuscar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscar1MouseClicked(evt);
            }
        });
        pnlRegistroEmpleado.add(btnBuscar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 80, 40));

        lblTipoCliente.setBackground(new java.awt.Color(255, 255, 255));
        lblTipoCliente.setForeground(new java.awt.Color(102, 102, 102));
        lblTipoCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTipoCliente.setText("Nombre Producto");
        lblTipoCliente.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblTipoCliente.setRoundBottomLeft(15);
        lblTipoCliente.setRoundBottomRight(15);
        lblTipoCliente.setRoundTopLeft(15);
        lblTipoCliente.setRoundTopRight(15);
        pnlRegistroEmpleado.add(lblTipoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 140, 40));

        lblNombreCliente.setBackground(new java.awt.Color(255, 255, 255));
        lblNombreCliente.setForeground(new java.awt.Color(102, 102, 102));
        lblNombreCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreCliente.setText("Nombre Producto");
        lblNombreCliente.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblNombreCliente.setRoundBottomLeft(15);
        lblNombreCliente.setRoundBottomRight(15);
        lblNombreCliente.setRoundTopLeft(15);
        lblNombreCliente.setRoundTopRight(15);
        pnlRegistroEmpleado.add(lblNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 140, 40));

        lblApellido.setBackground(new java.awt.Color(255, 255, 255));
        lblApellido.setForeground(new java.awt.Color(102, 102, 102));
        lblApellido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblApellido.setText("Nombre Producto");
        lblApellido.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblApellido.setRoundBottomLeft(15);
        lblApellido.setRoundBottomRight(15);
        lblApellido.setRoundTopLeft(15);
        lblApellido.setRoundTopRight(15);
        pnlRegistroEmpleado.add(lblApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 140, 40));

        lblEmail.setBackground(new java.awt.Color(255, 255, 255));
        lblEmail.setForeground(new java.awt.Color(102, 102, 102));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmail.setText("Nombre Producto");
        lblEmail.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblEmail.setRoundBottomLeft(15);
        lblEmail.setRoundBottomRight(15);
        lblEmail.setRoundTopLeft(15);
        lblEmail.setRoundTopRight(15);
        pnlRegistroEmpleado.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 310, 40));

        lblTelefono.setBackground(new java.awt.Color(255, 255, 255));
        lblTelefono.setForeground(new java.awt.Color(102, 102, 102));
        lblTelefono.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTelefono.setText("Nombre Producto");
        lblTelefono.setFont(new java.awt.Font("JetBrains Mono NL SemiBold", 0, 14)); // NOI18N
        lblTelefono.setRoundBottomLeft(15);
        lblTelefono.setRoundBottomRight(15);
        lblTelefono.setRoundTopLeft(15);
        lblTelefono.setRoundTopRight(15);
        pnlRegistroEmpleado.add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 140, 40));

        jPanel1.add(pnlRegistroEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 370, 530));

        panelMain.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 670));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/fondo_completo.png"))); // NOI18N
        panelMain.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 670));

        getContentPane().add(panelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1220, 670));

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //container.setPanel(new PanelOptions(),panelContainer);
        //setDates();
    }//GEN-LAST:event_formWindowOpened

    private void btnMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseClicked
        this.setExtendedState(1);
    }//GEN-LAST:event_btnMinimizeMouseClicked

    private void btnMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseEntered
        btnMinimize.setBackground(Color.gray);
        btnMinimize.setForeground(Color.white);
    }//GEN-LAST:event_btnMinimizeMouseEntered

    private void btnMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseExited
        btnMinimize.setBackground(new Color(215, 235, 255));
        btnMinimize.setForeground(new Color(0, 51, 153));
    }//GEN-LAST:event_btnMinimizeMouseExited

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setBackground(Color.red);
        btnExit.setForeground(Color.white);
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setBackground(new Color(215, 235, 255));
        btnExit.setForeground(new Color(0, 51, 153));
    }

    private void panelActionsMouseDragged(java.awt.event.MouseEvent evt) {//GEN-LAST:event_btnExitMouseExited
        int x = getLocation().x + evt.getX() - initX;//GEN-FIRST:event_panelActionsMouseDragged
        int y = getLocation().y + evt.getY() - initY;
        this.setLocation(x, y);
    }//GEN-LAST:event_panelActionsMouseDragged

    private void panelActionsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelActionsMousePressed
        initX = evt.getX();
        initY = evt.getY();
    }//GEN-LAST:event_panelActionsMousePressed

    private void btnVolverMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMenuMouseEntered
        btnVolverMenu.setBackground(new Color(4, 177, 233));
    }//GEN-LAST:event_btnVolverMenuMouseEntered

    private void btnVolverMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMenuMouseExited
        btnVolverMenu.setBackground(new Color(11, 61, 120));
    }//GEN-LAST:event_btnVolverMenuMouseExited

    private void btnVolverMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMenuMouseClicked
        new MenuPrincipal(SesionUsuario.obtenerUsuarioActual()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverMenuMouseClicked

    private void bntRegistrarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntRegistrarClienteMouseClicked
        new GestionClientes().setVisible(true);
    }//GEN-LAST:event_bntRegistrarClienteMouseClicked

    private void cmbProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbProductosMouseClicked
        //reiniciarFiltros();
    }//GEN-LAST:event_cmbProductosMouseClicked

    private void cmbProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductosActionPerformed
        seleccionarProducto();
    }//GEN-LAST:event_cmbProductosActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void btnAgregarProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarProductoMouseClicked
        agregarProducto();
    }//GEN-LAST:event_btnAgregarProductoMouseClicked

    private void btnRegistrarVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarVentaMouseClicked
        if(!listaDetalleVenta.isEmpty()) {
            registrarVenta();
        } else {
            JOptionPane.showMessageDialog(this, "No existen productos agregados");
        }
    }//GEN-LAST:event_btnRegistrarVentaMouseClicked

    private void txtBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarNombreActionPerformed

    }//GEN-LAST:event_txtBuscarNombreActionPerformed

    private void btnBuscar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscar1MouseClicked
        //aplicarFiltros();
    }//GEN-LAST:event_btnBuscar1MouseClicked

    private void txtBuscarNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNombreKeyTyped

    }//GEN-LAST:event_txtBuscarNombreKeyTyped

    private void txtBuscarNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarNombreKeyReleased
        if (!txtBuscarNombre.getText().isEmpty()) {
            BuscarCliente();
        }
    }//GEN-LAST:event_txtBuscarNombreKeyReleased

    private void BuscarCliente() {
        String nombre = txtBuscarNombre.getText();
        try {
            List<Cliente> listaCliente = c.buscarClientePorNombre(nombre);

            if (!listaCliente.isEmpty()) {
                Cliente cliente = listaCliente.get(0);

                lblNombreCliente.setText(cliente.getNombre());
                lblApellido.setText(cliente.getApellido());
                lblEmail.setText(cliente.getCorreo());
                lblTelefono.setText(cliente.getTelefono());
                lblTipoCliente.setText(String.valueOf(cliente.getTipoClienteId()));
                clienteVenta = cliente;
            } else {

                lblNombreCliente.setText("");
                lblApellido.setText("");
                lblEmail.setText("");
                lblTelefono.setText("");
                lblTipoCliente.setText("");
                clienteVenta = null;
                JOptionPane.showMessageDialog(null, "No se encontraron clientes con ese nombre.");
            }
        } catch (Excepciones ex) {
            Logger.getLogger(GestionVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /* private void aplicarFiltros() {

        String filtroNombreInput = txtBuscar.getText();
        int filtroCategoria = ((Categoria) cmbProductos.getSelectedItem()).getId();
        int filtroMarca = ((Marca) cmbFiltroMarcas.getSelectedItem()).getId();

        final String filtroNombre
                = (filtroNombreInput.equals("Buscar por nombre...") || filtroNombreInput.isEmpty())
                ? ""
                : filtroNombreInput.trim();

        if (!filtroNombre.isEmpty()) {
            listaProductosFiltrados = listaProductosBD.stream()
                    .filter(prod -> prod.getNombre().toLowerCase().contains(filtroNombre.toLowerCase()))
                    .collect(Collectors.toList());
        } else if (filtroCategoria > 0) {
            listaProductosFiltrados = listaProductosBD.stream()
                    .filter(prod -> prod.getCategoriaId() == filtroCategoria)
                    .collect(Collectors.toList());
        } else if (filtroMarca > 0) {
            listaProductosFiltrados = listaProductosBD.stream()
                    .filter(prod -> prod.getMarcaId() == filtroMarca)
                    .collect(Collectors.toList());
        } else {
            listaProductosFiltrados = new ArrayList<>(listaProductosBD);
        }

        if (!listaProductosFiltrados.isEmpty()) {
            actualizarTabla();
        }

    }*/
    private void seleccionarProducto() {
        Producto producto = (Producto) cmbProductos.getSelectedItem();

        lblNombre.setText(producto.getNombre());
        lblDescripcion.setText(producto.getDescripcion());
        lblCategoria.setText(obtenerCategoria(producto.getCategoriaId()));
        lblMarca.setText(obtenerMarca(producto.getMarcaId()));
        lblPrecio.setText(String.valueOf(producto.getPrecio()));
        txtCantidad.setText(String.valueOf(1));
    }

    private void verProductos() {
        try {
            this.listaProductosDB = new ArrayList<>(p.obtenerProductos());

            actulizarLista();
        } catch (Exception e) {
        }
    }

    private void actulizarLista() {
        for (Producto producto : listaProductosDB) {
            cmbProductos.addItem(producto);
        }
    }

    private String obtenerCategoria(int categoriaId) {
        try {
            List<Categoria> categorias = p.obtenerCategorias();
            for (Categoria categoria : categorias) {
                if (categoria.getId() == categoriaId) {
                    return categoria.getNombre();
                }
            }
        } catch (Excepciones ex) {
            Logger.getLogger(GestionProductos.class.getName()).log(Level.SEVERE, null, ex);
        }

        return "";
    }

    private String obtenerMarca(int marcaId) {
        try {
            List<Marca> marcas = p.obtenerMarcas();
            for (Marca marca : marcas) {
                if (marca.getId() == marcaId) {
                    return marca.getNombre();
                }
            }
        } catch (Excepciones ex) {
            Logger.getLogger(GestionProductos.class.getName()).log(Level.SEVERE, null, ex);
        }

        return "";
    }

    public void agregarProducto() {
        Producto seleccionado = (Producto) cmbProductos.getSelectedItem();
        int cantidad = Integer.parseInt(txtCantidad.getText());

        DetalleVenta detalle = new DetalleVenta(seleccionado.getId(), cantidad, seleccionado.getPrecio());
        listaDetalleVenta.add(detalle);

        actualizarTabla();
    }

    private void actualizarTabla() {
        modeloTabla.setRowCount(0);
        for (DetalleVenta detalle : listaDetalleVenta) {
            double totalProducto = detalle.getCantidad() * detalle.getPrecioUnitario();
            totalProducto = Math.round(totalProducto * 100.0) / 100.0;

            Object[] fila = {
                obtenerNombreProducto(detalle.getProductoId()), // función para obtener nombre desde ID
                detalle.getPrecioUnitario(),
                detalle.getCantidad(),
                totalProducto
            };
            modeloTabla.addRow(fila);
        }
        tblProductos.setModel(modeloTabla);
        actualizarTotales();
    }

    private void actualizarTotales() {
        double subtotal = 0.0;
        double iva = 0.0;
        double total = 0.0;
        double tasaIva = 0.15;

        // Recorremos la tabla para sumar los totales de cada fila
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            double filaTotal = (double) modeloTabla.getValueAt(i, 3); // columna 3 = cantidad * precio
            subtotal += filaTotal;
        }

        iva = subtotal * tasaIva;
        total = subtotal + iva;

        // Aquí puedes mostrarlo en etiquetas, por ejemplo
        lblSubtotal.setText("SubTotal: " + String.format("%.2f", subtotal));
        lblIva.setText("Iva(15%): " + String.format("%.2f", iva));
        lblTotal.setText("Total: " + String.format("%.2f", total));
    }

    private String obtenerNombreProducto(int productoId) {
        try {
            Producto producoto = p.obtenerProductoPorId(productoId);
            return producoto.getNombre();
        } catch (Excepciones ex) {
            Logger.getLogger(GestionVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }

    public void eliminarProductoSeleccionado() {
        int fila = tblProductos.getSelectedRow(); // fila seleccionada
        if (fila != -1) {
            // Obtenemos el nombre desde la tabla (columna 0)
            String nombreProducto = (String) modeloTabla.getValueAt(fila, 0);

            // Buscamos y eliminamos el DetalleVenta correspondiente
            DetalleVenta aEliminar = null;
            for (DetalleVenta detalle : listaDetalleVenta) {
                if (obtenerNombreProducto(detalle.getProductoId()).equals(nombreProducto)) {
                    aEliminar = detalle;
                    break;
                }
            }

            if (aEliminar != null) {
                listaDetalleVenta.remove(aEliminar); // eliminamos de la lista
                modeloTabla.removeRow(fila); // eliminamos de la tabla
                actualizarTotales(); // recalculamos totales
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto para eliminar.");
        }
    }

    private int seleccionarMetodoPago() {
        List<FormasPago> listaMetodos = new ArrayList();
        listaMetodos.add(new FormasPago(1, "Efectivo"));
        listaMetodos.add(new FormasPago(2, "Tarjeta de crédito"));
        listaMetodos.add(new FormasPago(3, "Transferencia bancaria"));
        FormasPago[] opciones = listaMetodos.toArray(new FormasPago[0]);
        FormasPago seleccionado = (FormasPago) JOptionPane.showInputDialog(
                null,
                "Seleccione el método de pago:",
                "Método de Pago",
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]
        );
        if (seleccionado != null) {
            return seleccionado.getId();
        } else {
            return -1;
        }
    }

    private void registrarVenta() {
    int formaPagoId = seleccionarMetodoPago();

    if (formaPagoId == -1) {
        JOptionPane.showMessageDialog(null, "No se seleccionó ningún método de pago. La venta no se registró.");
        return;
    }

    Venta venta = new Venta();
    venta.setEmpleadoId(usuario.getEmpleadoId());
    venta.setClienteId(clienteVenta.getId());
    venta.setFormaPagoId(formaPagoId);

    try {
        v.registrarVenta(venta, listaDetalleVenta);
        JOptionPane.showMessageDialog(null, "Venta registrada correctamente.");
        listaDetalleVenta.clear();
        actualizarTabla();
    } catch (Excepciones ex) {
        Logger.getLogger(GestionVentas.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Error al registrar la venta: " + ex.getMessage());
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jilmar.LabelRound bntRegistrarCliente;
    private jilmar.LabelRound btnAgregarProducto;
    private jilmar.LabelRound btnBuscar1;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel btnMinimize;
    private jilmar.LabelRound btnRegistrarVenta;
    private jilmar.LabelRound btnVolverMenu;
    private javax.swing.JComboBox<Producto> cmbProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccesos;
    private jilmar.LabelRound lblApellido;
    private jilmar.LabelRound lblCategoria;
    private jilmar.LabelRound lblDescripcion;
    private jilmar.LabelRound lblEmail;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblIva;
    private jilmar.LabelRound lblMarca;
    private jilmar.LabelRound lblNombre;
    private jilmar.LabelRound lblNombreCliente;
    private jilmar.LabelRound lblPrecio;
    private javax.swing.JLabel lblResumen1;
    private jilmar.LabelRound lblRol;
    private javax.swing.JLabel lblSubtotal;
    private jilmar.LabelRound lblTelefono;
    private jilmar.LabelRound lblTipoCliente;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel panelActions;
    private javax.swing.JPanel panelMain;
    private jilmar.PanelRound panelRound14;
    private jilmar.PanelRound panelRound7;
    private jilmar.PanelRound panelRound8;
    private jilmar.PanelRound pnlListaEmpleados;
    private jilmar.PanelRound pnlProducto;
    private jilmar.PanelRound pnlRegistroEmpleado;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtBuscarNombre;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables

    // Propiedasdes de la tabla
    private void propiedadTabla() {

        String[] columnas = {"Producto", "Precio Unitario", "Cantidad", "SubTotal", "Acciones"};
        modeloTabla = new DefaultTableModel(columnas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 4; // Solo la columna de acciones es "editable"
            }
        };

        tblProductos = new JTable(modeloTabla);
        tblProductos.setRowHeight(36);
        tblProductos.setFont(new java.awt.Font("JetBrains Mono SemiBoldd", 0, 12));
        tblProductos.getTableHeader().setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 12));
        tblProductos.getTableHeader().setBackground(new Color(4, 178, 234));
        tblProductos.getTableHeader().setForeground(Color.white);
        tblProductos.getTableHeader().setPreferredSize(new Dimension(100, 36));

        jScrollPane1.setViewportView(tblProductos);

        // Configurar el ancho de las columnas
        if (tblProductos.getColumnModel().getColumnCount() > 0) {
            tblProductos.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblProductos.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblProductos.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblProductos.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblProductos.getColumnModel().getColumn(4).setPreferredWidth(80);
        }

        // Agregar renderer personalizado para la columna de rol
        tblProductos.getColumnModel().getColumn(2).setCellRenderer(new RolCellRenderer());

        // Agregar renderer y editor personalizado para la columna de acciones
        tblProductos.getColumnModel().getColumn(4).setCellRenderer(new AccionesCellRenderer());
        tblProductos.getColumnModel().getColumn(4).setCellEditor(new AccionesCellEditor());

        //Centrar el texto de las celdas
        tblProductos.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (c instanceof JLabel label) {
                    label.setHorizontalAlignment(SwingConstants.CENTER);
                    label.setVerticalAlignment(SwingConstants.CENTER);
                    label.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 12));
                }
                return c;
            }
        });

        jScrollPane1.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
    }

    // Renderer personalizado para la columna de rol con colores
    class RolCellRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            if (c instanceof JLabel label) {
                label.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 12));
            }

            String rol = value.toString();
            setHorizontalAlignment(SwingConstants.CENTER);
            setOpaque(true);

            if (!isSelected) {
                switch (rol) {
                    case "ADMIN" -> {
                        setBackground(new Color(144, 238, 144)); // Verde claro
                        setForeground(Color.BLACK);
                    }
                    case "VENDEDOR" -> {
                        setBackground(new Color(173, 216, 230)); // Azul claro
                        setForeground(Color.BLACK);
                    }
                    case "TECNICO" -> {
                        setBackground(new Color(255, 218, 185)); // Naranja claro
                        setForeground(Color.BLACK);
                    }
                    default -> {
                        setBackground(Color.WHITE);
                        setForeground(Color.BLACK);
                    }
                }
            }

            return this;
        }
    }

// Renderer para los botones de acciones
    class AccionesCellRenderer extends JPanel implements javax.swing.table.TableCellRenderer {

        private final LabelRound btnEliminar;

        public AccionesCellRenderer() {
            setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));

            btnEliminar = new LabelRound();
            btnEliminar.setText("Eliminar");
            btnEliminar.setBackground(new Color(220, 53, 69));
            btnEliminar.setForeground(Color.WHITE);
            btnEliminar.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 12));
            btnEliminar.setPreferredSize(new Dimension(80, 25));
            btnEliminar.setHorizontalAlignment(SwingConstants.CENTER);
            btnEliminar.setOpaque(true);

            add(btnEliminar);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setBackground(table.getSelectionBackground());
            } else {
                setBackground(table.getBackground());
            }
            return this;
        }
    }

// Editor para los botones de acciones
    class AccionesCellEditor extends DefaultCellEditor {

        private final JPanel panel;
        private LabelRound btnEliminar;

        public AccionesCellEditor() {

            super(new JCheckBox());

            panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 5));

            btnEliminar = new LabelRound();
            btnEliminar.setText("Eliminar");
            btnEliminar.setBackground(new Color(220, 53, 69));
            btnEliminar.setForeground(Color.WHITE);
            btnEliminar.setFont(new java.awt.Font("JetBrains Mono SemiBold", 0, 12));
            btnEliminar.setPreferredSize(new Dimension(80, 25));
            btnEliminar.setHorizontalAlignment(SwingConstants.CENTER);
            btnEliminar.setOpaque(true);
            btnEliminar.setCursor(new Cursor(Cursor.HAND_CURSOR));

            btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    eliminarProductoSeleccionado();
                }

                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    btnEliminar.setBackground(new Color(200, 33, 49));
                }

                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    btnEliminar.setBackground(new Color(220, 53, 69));
                }
            });

            panel.add(btnEliminar);
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            table.convertRowIndexToModel(row);
            return panel;
        }

        @Override
        public Object getCellEditorValue() {
            return "Acciones";
        }
    }
}
